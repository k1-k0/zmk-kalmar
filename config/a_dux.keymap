// Copyright (c) 2024 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>


#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_ins_l {
            timeout-ms = <20>;
            key-positions = <1 2>;
            bindings = <&kp INS>;
        };

        combo_kapp_l {
            timeout-ms = <20>;
            key-positions = <1 3>;
            bindings = <&kp K_APP>;
        };

        combo_lpar_l {
            timeout-ms = <20>;
            key-positions = <2 3>;
            bindings = <&kp LPAR>;
        };

        combo_rpar_r {
            timeout-ms = <20>;
            key-positions = <6 7>;
            bindings = <&kp RPAR>;
        };

        combo_pscrn_r {
            timeout-ms = <20>;
            key-positions = <6 8>;
            bindings = <&kp PSCRN>;
        };

        combo_del_r {
            timeout-ms = <20>;
            key-positions = <7 8>;
            bindings = <&kp DEL>;
        };

        combo_f13_l {
            timeout-ms = <20>;
            key-positions = <11 12>;
            bindings = <&kp ESC>;
        };

        combo_grave_l {
            timeout-ms = <20>;
            key-positions = <11 13>;
            bindings = <&kp GRAVE>;
        };

        combo_minus_l {
            timeout-ms = <20>;
            key-positions = <12 13>;
            bindings = <&kp MINUS>;
        };

        combo_equal_l {
            timeout-ms = <25>;
            key-positions = <12 14>;
            bindings = <&kp EQUAL>;
        };

        combo_bslh_r {
            timeout-ms = <25>;
            key-positions = <15 17>;
            bindings = <&kp BSLH>;
        };

        combo_sqt_r {
            timeout-ms = <20>;
            key-positions = <16 17>;
            bindings = <&kp SQT>;
        };

        combo_tab_r {
            timeout-ms = <20>;
            key-positions = <16 18>;
            bindings = <&kp TAB>;
        };

        combo_f14_r {
            timeout-ms = <20>;
            key-positions = <17 18>;
            bindings = <&kp ESC>;
        };

        combo_caps_l {
            timeout-ms = <20>;
            key-positions = <21 22>;
            bindings = <&kp ENTER>;
        };

        combo_lbkt_l {
            timeout-ms = <20>;
            key-positions = <22 23>;
            bindings = <&kp LBKT>;
        };

        combo_rbkt_r {
            timeout-ms = <20>;
            key-positions = <26 27>;
            bindings = <&kp RBKT>;
        };

        combo_capsword_r {
            timeout-ms = <20>;
            key-positions = <27 28>;
            bindings = <&kp ENTER>;
        };

        combo_toggle_game_l {
            timeout-ms = <20>;
            key-positions = <20 24>;
            bindings = <&tog 5>;
        };

        combo_toggle_game_r {
            timeout-ms = <20>;
            key-positions = <25 29>;
            bindings = <&tog 5>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwe {
            bindings = <
&kp Q  &kp W       &kp E        &kp R        &kp T                                  &kp Y       &kp U        &kp I        &kp O       &kp P
&kp A  &ht LALT S  &ht LCTRL D  &ht LSHFT F  &kp G                                  &kp H       &ht RSHFT J  &ht RCTRL K  &ht RALT L  &kp SEMI
&kp Z  &kp X       &kp C        &ht LGUI V   &kp B                                  &kp N       &ht RGUI M   &kp COMMA    &kp DOT     &kp FSLH
                                             &lt 1 SPACE  &lt 2 TAB    &lt 2 ENTER  &lt 1 BSPC
            >;
        };

        nav {
            bindings = <
&kp C_AC_REDO    &kp C_VOL_DN        &kp C_MUTE       &kp C_VOL_UP            &kp C_NEXT                    &kp INS     &kp PG_UP       &kp UP_ARROW    &kp PG_DN       &caps_word
&kp F15          &ht LALT C_AC_BACK  &ht LCTRL K_APP  &ht LSHFT C_AC_FORWARD  &kp C_PP                      &kp HOME    &ht RSHFT LEFT  &ht RCTRL DOWN  &ht RALT RIGHT  &kp END
&lt 4 C_AC_UNDO  &kp C_AC_CUT        &kp C_AC_COPY    &ht LGUI C_AC_PASTE     &kp C_PREV                    &kp DELETE  &ht RGUI F13    &kp ESC         &kp F14         &lt 4 CAPS
                                                                              &trans      &trans    &trans  &trans
            >;
        };

        sym {
            bindings = <
&kp KP_DIVIDE  &kp AMPS       &kp ASTRK        &kp LPAR         &kp DQT                      &kp BSLH   &kp GRAVE      &kp LPAR        &kp RPAR       &kp PIPE
&kp RPAR       &ht LALT DLLR  &ht LCTRL PRCNT  &ht LSHFT CARET  &kp TILDE                    &kp MINUS  &ht RSHFT SQT  &ht RCTRL LBKT  &ht RALT RBKT  &kp EQUAL
&kp QMARK      &kp EXCL       &kp AT           &ht LGUI HASH    &kp GRAVE                    &kp UNDER  &ht RGUI DQT   &kp LBRC        &kp RBRC       &kp PLUS
                                                                &trans     &trans    &trans  &trans
            >;
        };

        fun {
            bindings = <
&kp KP_MULTIPLY  &kp N7       &kp N8        &kp N9        &kp PLUS                     &kp PAUSE_BREAK  &kp F7        &kp F8        &kp F9       &kp F10
&kp KP_SLASH     &ht LALT N4  &ht LCTRL N5  &ht LSHFT N6  &kp MINUS                    &kp PSCRN        &ht RSHFT F4  &ht RCTRL F5  &ht RALT F6  &kp F11
&kp N0           &kp N1       &kp N2        &ht LGUI N3   &kp EQUAL                    &key_repeat      &ht RGUI F1   &kp F2        &kp F3       &kp F12
                                                          &trans     &trans    &trans  &trans
            >;
        };

        bt {
            bindings = <
&trans        &bootloader   &trans        &sys_reset    &bt BT_CLR_ALL                    &trans  &sys_reset  &trans  &bootloader  &trans
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                      &trans  &trans      &trans  &trans       &trans
&trans        &out OUT_BLE  &out OUT_USB  &out OUT_TOG  &bt BT_CLR                        &trans  &trans      &trans  &trans       &trans
                                                        &trans          &trans    &trans  &trans
            >;
        };

        gam {
            bindings = <
&kp Q  &kp W  &kp E  &kp R  &kp T                               &kp Y     &kp U  &kp I      &kp O    &kp P
&kp A  &kp S  &kp D  &kp F  &kp G                               &kp H     &kp J  &kp K      &kp L    &kp SEMI
&kp Z  &kp X  &kp C  &kp V  &kp B                               &kp N     &kp M  &kp COMMA  &kp DOT  &kp FSLH
                            &kp SPACE  &kp ENTER    &kp ESCAPE  &kp BSPC
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        to_fun {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

